<%- include header.ejs %>

<div class="container">

	<div class="row">
		<div class="col-lg-12">
			<div class="page-header">
				<h1><%= system.name %> <small class="pull-right"><%= system.uid %></small></h1>
			</div>
		</div>
	</div>

	<div class="row triplegraph">
		<div class="col-lg-1 axis">
			<div id="axis0"></div>
		</div>
		<div class="col-lg-1 axis">
			<div id="axis1"></div>
		</div>
		<div class="col-lg-1 axis">
			<div id="axis2"></div>	
		</div>
		<div class="col-lg-10">
			<div id="chart" class="rickshaw_graph"></div>
		</div>
	</div>
	<p/>
	<div class="row">
		<div class="col-lg-12">
			<div id="graph"></div>			
		</div>
	</div>
	<p/>
	<div class="row">
		<div class="col-lg-12">
			<h2>Alerts</h2>
			<table class="table table-hover table-striped">
				<% for(var i=0; i<system.alerts.length; i++) { %>
				<tr class="<%= ! system.alerts[i].acknowledgedAt ? 'danger' : '' %>">
					<td><strong><%= ("name" in system.alerts[i].rule) ? system.alerts[i].rule.name : 'none' %></strong></td>
					<td><%= ("message" in system.alerts[i].rule && system.alerts[i].rule.message !== null) ? system.alerts[i].rule.message : system.alerts[i].rule.name %></td>
					<td><%= ("date" in system.alerts[i]) ? new Date( system.alerts[i].date).toString() : '-' %></td>
					<td><%= ("acknowledgedAt" in system.alerts[i]) && system.alerts[i].acknowledgedAt !==null ? 'Acknowledged' : 'Not acknowledged' %></td>
				</tr>
				<% } %>
			</table>	
		</div>
	</div>
</div>

<script type="text/javascript">

var palette = new Rickshaw.Color.Palette();

scales = [];

data = [<%- JSON.stringify(system.temperature) %>, <%- JSON.stringify(system.luminosity)%>, <%- JSON.stringify(system.humidity)%>];

_ref = data[1];
for (_j = 0, _len = _ref.length; _j < _len; _j++) {
  point = _ref[_j];
  point.y *= point.y;
}

for (_k = 0, _len1 = data.length; _k < _len1; _k++) {
  series = data[_k];
  min = Number.MAX_VALUE;
  max = Number.MIN_VALUE;
  for (_l = 0, _len2 = series.length; _l < _len2; _l++) {
    point = series[_l];
    min = Math.min(min, point.y);
    max = Math.max(max, point.y);
  }
  if (_k === 0) {
    scales.push(d3.scale.linear().domain([min, max]).nice());
  } else {
    scales.push(d3.scale.pow().domain([min, max]).nice());
  }
}

var graph = new Rickshaw.Graph({
	element: document.querySelector("#chart"),
	renderer: 'multi',
	series: [{
		name: "Luminosity",
		data: data[1],
		color: '#d9534f',
		scale: scales[1],
		renderer: "line"
	},{
		name: "Humidity",
		data: data[2],
		color: '#f0ad4e',
		scale: scales[2],
		renderer: "line"
	},{
		name: "Temperature",
		data: data[0],
		color: '#5cb85c',
		scale: scales[0],
		renderer: "line"
	}]
});


var time = new Rickshaw.Fixtures.Time();

var xAxis = new Rickshaw.Graph.Axis.Time({
    graph: graph,
});

//Temperature
new Rickshaw.Graph.Axis.Y.Scaled({
    element: document.getElementById('axis0'),
	graph: graph,
	grid: true,
	orientation: 'left',
	height : 250,
	width : 40,
	scale: scales[0],
	tickFormat: Rickshaw.Fixtures.Number.formatKMBT
});

//Luminosity
 new Rickshaw.Graph.Axis.Y.Scaled({
   element: document.getElementById('axis1'),
   graph: graph,
   grid: false,
   orientation: 'left',
   height : 250,
   width : 40,
   scale: scales[1],
   tickFormat: Rickshaw.Fixtures.Number.formatKMBT
 });

//Humidity
 new Rickshaw.Graph.Axis.Y.Scaled({
   element: document.getElementById('axis2'),
   graph: graph,
   grid: false,
   orientation: 'left',
   height : 250,
   width : 40,
   scale: scales[2],
   tickFormat: Rickshaw.Fixtures.Number.formatKMBT
 });

var hoverDetail = new Rickshaw.Graph.HoverDetail( {
    graph: graph
} );

var legend = new Rickshaw.Graph.Legend({
    graph: graph,
    element: document.querySelector('#graph')
});

graph.render();

</script>

<%- include footer.ejs %>
